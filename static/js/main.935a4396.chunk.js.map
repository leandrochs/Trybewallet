{"version":3,"sources":["actions/index.js","pages/Login.js","helpers/getApi.js","components/Form.js","components/FormEdit.js","components/Header.js","components/BtnDelete.js","components/BtnEdit.js","components/Table.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["walletValue","value","type","deleteValue","editMode","Login","props","state","email","password","disabled","login","bind","validation","onChange","target","name","this","setState","replace","length","match","e","a","preventDefault","loginDispatch","history","push","autoComplete","data-testid","placeholder","onClick","React","Component","connect","dispatch","currenceApi","fetch","method","then","response","json","catch","error","console","log","currence","USDT","initialsApi","initials","Object","keys","Form","expense","description","currency","tag","submit","resetValues","currenceDispatch","_uniqueId","expenses","id","exchangeRates","submitDispatch","currencies","htmlFor","map","ini","key","wallet","FormEdit","editData","editModeDispatch","style","backgroundColor","Header","user","total","parseFloat","ask","reduce","ac","cv","toFixed","BtnDelete","btnDelete","idDispatch","role","aria-label","BtnEdit","btnEdit","deleteDispatch","Table","border","curr","split","display","justifyContent","Wallet","App","exact","path","component","Boolean","window","location","hostname","initialState","userReducer","action","walletReducer","filter","data","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mVASaA,EAAc,SAACC,GAAD,MAAY,CAAEC,KAPnB,SAOiCD,UAE1CE,EAAc,SAACF,GAAD,MAAY,CAAEC,KAPd,cAOiCD,UAE/CG,EAAW,SAACH,GAAD,MAAY,CAAEC,KAPb,YAO8BD,UCNjDI,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,UAAU,GAEZ,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBATC,E,4CAYnB,YAAuC,IAAD,WAA3BG,OAAUC,EAAiB,EAAjBA,KAAMf,EAAW,EAAXA,MACzBgB,KAAKC,SAAL,eAAiBF,EAAOf,EAAMkB,QAAQ,MAAO,MAAO,WAClD,EAAKN,kB,wBAIT,WACE,MAA4BI,KAAKV,MAAzBC,EAAR,EAAQA,MAAR,EAAeC,SAEFW,QAxBK,GAwBsBZ,EAAMa,MAAM,MAAQb,EAAMa,MAAM,SACtEJ,KAAKC,SAAS,CAAER,UAAU,IAE1BO,KAAKC,SAAS,CAAER,UAAU,M,0DAI9B,WAAYY,GAAZ,qBAAAC,EAAA,sDACED,EAAEE,iBACMhB,EAAUS,KAAKV,MAAfC,MAFV,EAGqCS,KAAKX,MAAhCmB,EAHV,EAGUA,cAAeC,EAHzB,EAGyBA,QAEvBD,EAAcjB,GACdkB,EAAQC,KAAK,aANf,gD,2EASA,WAAU,IAAD,OACP,EAAsCV,KAAKV,MAAnCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAEzB,OACE,6BACE,0CACA,8BACE,2BACEkB,aAAa,MACbC,cAAY,cACZf,SAAWG,KAAKH,SAChBE,KAAK,QACLc,YAAY,SACZ5B,KAAK,QACLD,MAAQO,IAEV,2BACEoB,aAAa,mBACbC,cAAY,iBACZf,SAAWG,KAAKH,SAChBE,KAAK,WACLc,YAAY,QACZ5B,KAAK,WACLD,MAAQQ,IAGV,4BACEC,SAAWA,EACXqB,QAAU,SAACT,GAAD,OAAO,EAAKX,MAAMW,IAC5BpB,KAAK,UAHP,gB,GAhEU8B,IAAMC,WAwFXC,cAAQ,MAXI,SAACC,GAAD,MAAe,CACxCV,cAAe,SAACH,GAAD,OAAOa,ED7Ea,CAAEjC,KAPnB,OAO+BD,MC6ERqB,QAU5BY,CAAkC7B,G,iBC/FlC,SAAe+B,IAA9B,+B,4CAAe,4BAAAb,EAAA,sEACUc,MAAM,8CAA+C,CAC1EC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MALnB,qBACPG,EADO,QAOGC,KAPH,kBASND,GATM,4C,sBAYR,SAAeE,IAAtB,+B,4CAAO,8BAAAzB,EAAA,sEACkBc,MAAM,+CAC1BE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAH3B,qBACCG,EADD,QAKWC,KAEVE,EAAWC,OAAOC,KAAKL,GAPxB,kBASEG,GATF,4C,sBCLP,IAIMG,E,kDACJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX8C,QAAS,GACTC,YAAa,GACbC,SAVa,MAWbjB,OAVa,WAWbkB,IAVa,qBAaf,EAAK1C,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAK6C,OAAS,EAAKA,OAAO7C,KAAZ,gBACd,EAAK8C,YAAc,EAAKA,YAAY9C,KAAjB,gBAZF,E,4FAenB,8BAAAW,EAAA,6DACUoC,EAAqB1C,KAAKX,MAA1BqD,iBADV,SAGyBX,IAHzB,OAGQC,EAHR,OAIEU,EAAiBV,GAJnB,gD,4EAOA,YAAuC,IAAD,IAA3BlC,OAAUC,EAAiB,EAAjBA,KAAMf,EAAW,EAAXA,MACzBgB,KAAKC,SAAL,eAAiBF,EAAOf,M,yBAG1B,WACEgB,KAAKC,SAAS,CACZmC,QAAS,GACTC,YAAa,GACbC,SAnCa,MAoCbjB,OAnCa,WAoCbkB,IAnCa,wB,2DAuCjB,WAAalC,GAAb,2BAAAC,EAAA,6DACED,EAAEE,iBADJ,EAQMP,KAAKV,MALP8C,EAHJ,EAGIA,QACAC,EAJJ,EAIIA,YACAC,EALJ,EAKIA,SACAjB,EANJ,EAMIA,OACAkB,EAPJ,EAOIA,IAPJ,KAWQI,MAAc,EAXtB,KAYWP,EAZX,KAaIC,EAbJ,KAcIC,EAdJ,KAeIjB,EAfJ,KAgBIkB,EAhBJ,UAiByBpB,IAjBzB,oBAUQyB,EAVR,CAWIC,GAXJ,KAYI7D,MAZJ,KAaIqD,YAbJ,KAcIC,SAdJ,KAeIjB,OAfJ,KAgBIkB,IAhBJ,KAiBIO,cAjBJ,OAoBUC,EAAmB/C,KAAKX,MAAxB0D,gBACOH,GAEf5C,KAAKyC,cAvBP,iD,2EA0BA,WAAU,IAAD,OACP,EAAwDzC,KAAKV,MAArD8C,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,SAAUjB,EAAxC,EAAwCA,OAAQkB,EAAhD,EAAgDA,IACxCS,EAAehD,KAAKX,MAApB2D,WAER,OACE,8BACE,2BACEpC,cAAY,cACZ3B,KAAK,SACLc,KAAK,UACLf,MAAQoD,EACRvC,SAAWG,KAAKH,WAGlB,2BACEe,cAAY,oBACZ3B,KAAK,OACLc,KAAK,cACLf,MAAQqD,EACRxC,SAAWG,KAAKH,WAGlB,2BAAOoD,QAAQ,SAAf,QAEE,4BACEJ,GAAG,QACHjC,cAAY,iBACZb,KAAK,WACLf,MAAQsD,EACRzC,SAAWG,KAAKH,UAGdmD,EAAWE,KAAI,SAACC,GAAD,OAAS,4BAAQC,IAAMD,EAAMnE,MAAQmE,GAAQA,QAKlE,4BACEvC,cAAY,eACZb,KAAK,SACLf,MAAQqC,EACRxB,SAAWG,KAAKH,UAEhB,4BAAQb,MAAM,YAAd,YACA,4BAAQA,MAAM,2BAAd,2BACA,4BAAQA,MAAM,0BAAd,2BAGF,4BACE4B,cAAY,YACZb,KAAK,MACLf,MAAQuD,EACR1C,SAAWG,KAAKH,UAEhB,4BAAQb,MAAM,qBAAd,qBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,aAGF,4BACEC,KAAK,SACL6B,QAAU,SAACT,GAAD,OAAO,EAAKmC,OAAOnC,KAF/B,0B,GA5HWU,IAAMC,WAsJVC,eAVS,SAAC3B,GAAD,MAAY,CAClC0D,WAAY1D,EAAM+D,OAAOL,eANA,SAAC9B,GAAD,MAAe,CACxC6B,eAAgB,SAAC1C,GAAD,OAAOa,EAASnC,EAAYsB,KAC5CqC,iBAAkB,SAACrC,GAAD,OAAOa,EH1Ic,CAAEjC,KAPnB,WAOmCD,MG0ITqB,QAanCY,CAA6CkB,GC5JtDmB,E,kDACJ,WAAYjE,GAAQ,IAAD,sBAEjB,IACA,GAFA,cAAMA,IACoBA,MAAlBkE,SASK,GAPXV,EADF,EACEA,GACA7D,EAFF,EAEEA,MACAqD,EAHF,EAGEA,YACAC,EAJF,EAIEA,SACAjB,EALF,EAKEA,OACAkB,EANF,EAMEA,IACAO,EAPF,EAOEA,cAVe,OAajB,EAAKxD,MAAQ,CACXuD,KACA7D,QACAqD,cACAC,WACAjB,SACAkB,MACAO,iBAGF,EAAKjD,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAK6C,OAAS,EAAKA,OAAO7C,KAAZ,gBAxBG,E,4CA2BnB,YAAuC,IAAD,IAA3BG,OAAUC,EAAiB,EAAjBA,KAAMf,EAAW,EAAXA,MACzBgB,KAAKC,SAAL,eAAiBF,EAAOf,M,2DAG1B,WAAaqB,GAAb,qCAAAC,EAAA,sDACED,EAAEE,iBADJ,EAUMP,KAAKV,MAPPuD,EAHJ,EAGIA,GACA7D,EAJJ,EAIIA,MACAqD,EALJ,EAKIA,YACAC,EANJ,EAMIA,SACAjB,EAPJ,EAOIA,OACAkB,EARJ,EAQIA,IACAO,EATJ,EASIA,cAGIF,EAAW,CACfC,KACA7D,QACAqD,cACAC,WACAjB,SACAkB,MACAO,iBAnBJ,EAsB+C9C,KAAKX,MAA1C0D,EAtBV,EAsBUA,eAAgBS,EAtB1B,EAsB0BA,iBACxBT,EAAeH,GACfY,GAAiB,GAxBnB,gD,2EA2BA,WAAU,IAAD,OACCR,EAAehD,KAAKX,MAApB2D,WACR,EAAsDhD,KAAKV,MAAnDN,EAAR,EAAQA,MAAOqD,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,SAAUjB,EAAtC,EAAsCA,OAAQkB,EAA9C,EAA8CA,IAE9C,OACE,8BACE,2BACE3B,cAAY,cACZ3B,KAAK,SACLc,KAAK,QACLF,SAAWG,KAAKH,SAChBb,MAAQA,IAGV,2BACE4B,cAAY,oBACZ3B,KAAK,OACLc,KAAK,cACLf,MAAQqD,EACRxC,SAAWG,KAAKH,WAGlB,2BAAOoD,QAAQ,SAAf,QAEE,4BACEJ,GAAG,QACHjC,cAAY,iBACZb,KAAK,WACLf,MAAQsD,EACRzC,SAAWG,KAAKH,UAGdmD,EAAWE,KAAI,SAACC,GAAD,OAAS,4BAAQC,IAAMD,EAAMnE,MAAQmE,GAAQA,QAKlE,4BACEvC,cAAY,eACZb,KAAK,SACLf,MAAQqC,EACRxB,SAAWG,KAAKH,UAEhB,4BAAQb,MAAM,YAAd,YACA,4BAAQA,MAAM,2BAAd,2BACA,4BAAQA,MAAM,0BAAd,2BAGF,4BACE4B,cAAY,YACZb,KAAK,MACLf,MAAQuD,EACR1C,SAAWG,KAAKH,UAEhB,4BAAQb,MAAM,qBAAd,qBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,aAGF,4BACEC,KAAK,SACL6B,QAAU,SAACT,GAAD,OAAO,EAAKmC,OAAOnC,IAC7BoD,MAAQ,CAAEC,gBAAiB,UAH7B,uB,GAxHe3C,IAAMC,WAqJdC,eAZS,SAAC3B,GAAD,MAAY,CAClCiE,SAAUjE,EAAM+D,OAAOE,SACvBP,WAAY1D,EAAM+D,OAAOL,eAPA,SAAC9B,GAAD,MAAe,CACxC6B,eAAgB,SAAC1C,GAAD,OAAOa,EAASnC,EAAYsB,KAC5CmD,iBAAkB,SAACnD,GAAD,OAAOa,EAAS/B,EAASkB,QAe9BY,CAA6CqC,GCtJtDK,E,4JACJ,WACE,MAA2B3D,KAAKX,MAAxBuE,EAAR,EAAQA,KAKFC,EALN,EAAcjB,SACiBM,KAAI,gBAAGlE,EAAH,EAAGA,MAAOsD,EAAV,EAAUA,SAAUQ,EAApB,EAAoBA,cAApB,OACjCgB,WAAY9E,EAAQ8D,EAAcR,GAAUyB,QAGlBC,QADZ,SAACC,EAAIC,GAAL,OAAaD,EAAOC,IACQ,GAE5C,OACE,6BACE,yBAAKtD,cAAY,eACbgD,GAEJ,yBAAKhD,cAAY,eACbiD,EAAMM,QAAQ,IAElB,yBAAKvD,cAAY,yBAAjB,Y,GAjBaG,IAAMC,WAmCZC,eAVS,SAAC3B,GAAD,MAAY,CAClCsE,KAAMtE,EAAMsE,KAAKrE,MACjBqD,SAAUtD,EAAM+D,OAAOT,YAQe,KAAzB3B,CAA+B0C,GClCxCS,E,kDACJ,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDgF,UAAY,EAAKA,UAAU1E,KAAf,gBAFA,E,6CAKnB,SAAUkD,IAERyB,EADuBtE,KAAKX,MAApBiF,YACGzB,K,oBAGb,WAAU,IAAD,OACCA,EAAO7C,KAAKX,MAAZwD,GAER,OACE,4BAAQjC,cAAY,aAAa3B,KAAK,SAAS6B,QAAU,kBAAM,EAAKuD,UAAUxB,KAC5E,0BAAM0B,KAAK,MAAMC,aAAW,WAA5B,e,GAhBgBzD,IAAMC,WA+BfC,cAAQ,MATI,SAACC,GAAD,MAAe,CACxCoD,WAAY,SAACjE,GAAD,OAAOa,EAAShC,EAAYmB,QAQ3BY,CAAkCmD,GC/B3CK,E,kDACJ,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IACDqF,QAAU,EAAKA,QAAQ/E,KAAb,gBAFE,E,2CAKnB,SAAQkD,GACN,MAAyD7C,KAAKX,MAAtDiF,EAAR,EAAQA,WAAYd,EAApB,EAAoBA,iBAAkBmB,EAAtC,EAAsCA,eACtCL,EAAWzB,GACXW,GAAiB,GACjBmB,EAAe9B,K,oBAGjB,WAAU,IAAD,OACCA,EAAO7C,KAAKX,MAAZwD,GAER,OACE,4BAAQjC,cAAY,WAAW3B,KAAK,SAAS6B,QAAU,kBAAM,EAAK4D,QAAQ7B,KACxE,0BAAM0B,KAAK,MAAMC,aAAW,WAA5B,qB,GAlBczD,IAAMC,WAqCbC,cAAQ,MAbI,SAACC,GAAD,MAAe,CACxCoD,WAAY,SAACjE,GAAD,OAAOa,EPlBgB,CAAEjC,KAPd,YAO+BD,MOkBhBqB,KACtCsE,eAAgB,SAACtE,GAAD,OAAOa,EAAShC,EAAYmB,KAC5CmD,iBAAkB,SAACnD,GAAD,OAAOa,EAAS/B,EAASkB,QAU9BY,CAAkCwD,GCpC3CG,E,4JACJ,WACE,IAAQhC,EAAa5C,KAAKX,MAAlBuD,SAER,OACE,2BAAOiC,OAAO,KACZ,+BACE,4BACE,+CACA,mCACA,sDACA,qCACA,qCACA,mDACA,gDACA,qDACA,gDAGJ,+BAEIjC,EAASM,KAAI,YAQN,IAPLL,EAOI,EAPJA,GACAR,EAMI,EANJA,YACAE,EAKI,EALJA,IACAlB,EAII,EAJJA,OACArC,EAGI,EAHJA,MACAsD,EAEI,EAFJA,SACAQ,EACI,EADJA,cAEMiB,EAAMD,WAAWhB,EAAcR,GAAUyB,KACzCe,EAAOhC,EAAcR,GAAUvC,KAAKgF,MAAM,KAAK,GACrD,OACE,wBAAI3B,IAAMP,GACR,4BAAMR,GACN,4BAAME,GACN,4BAAMlB,GACN,4BAAMrC,GACN,4BAAM8F,GACN,4BAAMf,EAAII,QAAQ,IAClB,6BAAOnF,EAAQ+E,GAAKI,QAAQ,IAC5B,oCACA,wBAAIV,MAAQ,CAAEuB,QAAS,OAAQC,eAAgB,iBAC7C,kBAAC,EAAD,CAASpC,GAAKA,IACd,kBAAC,EAAD,CAAWA,GAAKA,e,GA5ChB9B,IAAMC,WAgEXC,eARS,SAAC3B,GAAD,MAAY,CAClCsD,SAAUtD,EAAM+D,OAAOT,YAOe,KAAzB3B,CAA+B2D,GC9DxCM,E,4JACJ,WACE,IAAQ/F,EAAaa,KAAKX,MAAlBF,SAER,OACE,6BACE,kBAAC,EAAD,MAEGA,EAAY,kBAAC,EAAD,MAAe,kBAAC,EAAD,MAE9B,kBAAC,EAAD,W,GAVa4B,IAAMC,WAwBZC,eARS,SAAC3B,GAAD,MAAY,CAClCH,SAAUG,EAAM+D,OAAOlE,YAOe,KAAzB8B,CAA+BiE,GChB/BC,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYlG,IAClC,kBAAC,IAAD,CAAOiG,KAAK,YAAYC,UAAYJ,OCExBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStF,MACvB,2D,oCCdAuF,EAAe,CAAEpG,MAAO,IAWfqG,MATf,WAAoD,IAA/BtG,EAA8B,uDAAtBqG,EAAcE,EAAQ,uCACjD,OAAQA,EAAO5G,MACf,IZPkB,OYQhB,OAAO,2BAAKK,GAAZ,IAAmBC,MAAOsG,EAAO7G,QACnC,QACE,OAAOM,I,QCRLqG,EAAe,CAAE3C,WAAY,GAAIJ,SAAU,GAAIW,SAAU,GAAIpE,UAAU,GA2B9D2G,MAzBf,WAAsD,IAA/BxG,EAA8B,uDAAtBqG,EAAcE,EAAQ,uCACnD,OAAQA,EAAO5G,MACf,IbLoB,SaMlB,OAAO,2BAAKK,GAAZ,IAAmBsD,SAAS,GAAD,mBAAMtD,EAAMsD,UAAZ,CAAsBiD,EAAO7G,UAC1D,IbNsB,WaOpB,OAAO,2BAAKM,GAAZ,IAAmB0D,WAAY6C,EAAO7G,QACxC,IbPyB,caQvB,OAAO,2BACFM,GADL,IAEEsD,SAAUtD,EAAMsD,SAASmD,QAAO,qBAAGlD,KAAgBgD,EAAO7G,WAE9D,IbXuB,YaYrB,IAAMgH,EAAO1G,EAAMsD,SAASmD,QAAO,qBAAGlD,KAAgBgD,EAAO7G,SAC7D,OAAO,2BACFM,GADL,IAEEiE,SAAUyC,IAGd,IbjBuB,YakBrB,OAAO,2BAAK1G,GAAZ,IAAmBH,SAAU0G,EAAO7G,QACtC,QACE,OAAOM,ICdI2G,GALCC,0BAAgB,CAC9BtC,OACAP,WCGa8C,GAPDC,sBACZH,GACAI,8BACEC,0BAAgBC,OCCpBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAQA,IAChB,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJO,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxF,MAAK,SAAAyF,GACJA,EAAaC,gBAEdvF,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMuF,c","file":"static/js/main.935a4396.chunk.js","sourcesContent":["// Coloque aqui suas actions\nexport const USER = 'USER';\nexport const WALLET = 'WALLET';\nexport const INITIALS = 'INITIALS';\nexport const DELETE_LINE = 'DELETE_LINE';\nexport const EDIT_LINE = 'EDIT_LINE';\nexport const EDIT_MODE = 'EDIT_MODE';\n\nexport const userValue = (value) => ({ type: USER, value });\nexport const walletValue = (value) => ({ type: WALLET, value });\nexport const initialsValue = (value) => ({ type: INITIALS, value });\nexport const deleteValue = (value) => ({ type: DELETE_LINE, value });\nexport const editValue = (value) => ({ type: EDIT_LINE, value });\nexport const editMode = (value) => ({ type: EDIT_MODE, value });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { userValue } from '../actions';\n\nconst MIN_SIZE_PASS = 6;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n    this.login = this.login.bind(this);\n    this.validation = this.validation.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange({ target: { name, value } }) {\n    this.setState({ [name]: value.replace(/\\s/g, '') }, () => {\n      this.validation();\n    });\n  }\n\n  validation() {\n    const { email, password } = this.state;\n\n    if (password.length >= MIN_SIZE_PASS && email.match(/@/) && email.match(/\\..../)) {\n      this.setState({ disabled: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  async login(e) {\n    e.preventDefault();\n    const { email } = this.state;\n    const { loginDispatch, history } = this.props;\n\n    loginDispatch(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password, disabled } = this.state;\n\n    return (\n      <div>\n        <h3>Login Page</h3>\n        <form>\n          <input\n            autoComplete=\"off\"\n            data-testid=\"email-input\"\n            onChange={ this.onChange }\n            name=\"email\"\n            placeholder=\"E-mail\"\n            type=\"email\"\n            value={ email }\n          />\n          <input\n            autoComplete=\"current-password\"\n            data-testid=\"password-input\"\n            onChange={ this.onChange }\n            name=\"password\"\n            placeholder=\"Senha\"\n            type=\"password\"\n            value={ password }\n          />\n\n          <button\n            disabled={ disabled }\n            onClick={ (e) => this.login(e) }\n            type=\"submit\"\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginDispatch: (e) => dispatch(userValue(e)),\n});\n\nLogin.propTypes = {\n  loginDispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export default async function currenceApi() {\n  const currence = await fetch('https://economia.awesomeapi.com.br/json/all', {\n    method: 'GET',\n  })\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n\n  delete currence.USDT;\n\n  return currence;\n}\n\nexport async function initialsApi() {\n  const currence = await fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n\n  delete currence.USDT;\n\n  const initials = Object.keys(currence);\n\n  return initials;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _uniqueId from 'lodash/uniqueId';\nimport { initialsValue, walletValue } from '../actions';\nimport currenceApi, { initialsApi } from '../helpers/getApi';\n\nconst curDefault = 'USD';\nconst metDefault = 'Dinheiro';\nconst tagDefault = 'Alimentação';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: '',\n      description: '',\n      currency: curDefault,\n      method: metDefault,\n      tag: tagDefault,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.resetValues = this.resetValues.bind(this);\n  }\n\n  async componentDidMount() {\n    const { currenceDispatch } = this.props;\n\n    const initials = await initialsApi();\n    currenceDispatch(initials);\n  }\n\n  onChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  resetValues() {\n    this.setState({\n      expense: '',\n      description: '',\n      currency: curDefault,\n      method: metDefault,\n      tag: tagDefault,\n    });\n  }\n\n  async submit(e) {\n    e.preventDefault();\n    const {\n      expense,\n      description,\n      currency,\n      method,\n      tag,\n    } = this.state;\n\n    const expenses = {\n      id: _uniqueId() - 1,\n      value: expense,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: await currenceApi(),\n    };\n\n    const { submitDispatch } = this.props;\n    submitDispatch(expenses);\n\n    this.resetValues();\n  }\n\n  render() {\n    const { expense, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n\n    return (\n      <form>\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          name=\"expense\"\n          value={ expense }\n          onChange={ this.onChange }\n        />\n\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          name=\"description\"\n          value={ description }\n          onChange={ this.onChange }\n        />\n\n        <label htmlFor=\"moeda\">\n          Moeda\n          <select\n            id=\"moeda\"\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            value={ currency }\n            onChange={ this.onChange }\n          >\n            {\n              currencies.map((ini) => <option key={ ini } value={ ini }>{ ini }</option>)\n            }\n          </select>\n        </label>\n\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          value={ method }\n          onChange={ this.onChange }\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n\n        <select\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ this.onChange }\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n\n        <button\n          type=\"submit\"\n          onClick={ (e) => this.submit(e) }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  submitDispatch: (e) => dispatch(walletValue(e)),\n  currenceDispatch: (e) => dispatch(initialsValue(e)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nForm.propTypes = {\n  submitDispatch: PropTypes.func.isRequired,\n  currenceDispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editMode, walletValue } from '../actions';\n\nclass FormEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    const { editData } = this.props;\n    const {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    } = editData[0];\n\n    this.state = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  onChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async submit(e) {\n    e.preventDefault();\n    const {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    } = this.state;\n\n    const expenses = {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n    };\n\n    const { submitDispatch, editModeDispatch } = this.props;\n    submitDispatch(expenses);\n    editModeDispatch(false);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n\n    return (\n      <form>\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          name=\"value\"\n          onChange={ this.onChange }\n          value={ value }\n        />\n\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          name=\"description\"\n          value={ description }\n          onChange={ this.onChange }\n        />\n\n        <label htmlFor=\"moeda\">\n          Moeda\n          <select\n            id=\"moeda\"\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            value={ currency }\n            onChange={ this.onChange }\n          >\n            {\n              currencies.map((ini) => <option key={ ini } value={ ini }>{ ini }</option>)\n            }\n          </select>\n        </label>\n\n        <select\n          data-testid=\"method-input\"\n          name=\"method\"\n          value={ method }\n          onChange={ this.onChange }\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n\n        <select\n          data-testid=\"tag-input\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ this.onChange }\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n\n        <button\n          type=\"submit\"\n          onClick={ (e) => this.submit(e) }\n          style={ { backgroundColor: 'green' } }\n        >\n          Editar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  submitDispatch: (e) => dispatch(walletValue(e)),\n  editModeDispatch: (e) => dispatch(editMode(e)),\n});\n\nconst mapStateToProps = (state) => ({\n  editData: state.wallet.editData,\n  currencies: state.wallet.currencies,\n});\n\nFormEdit.propTypes = {\n  submitDispatch: PropTypes.func.isRequired,\n  editData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  editModeDispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormEdit);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    const { user, expenses } = this.props;\n    const expenseValues = expenses.map(({ value, currency, exchangeRates }) => (\n      parseFloat((value * exchangeRates[currency].ask))\n    ));\n    const reducer = (ac, cv) => (ac) + (cv);\n    const total = expenseValues.reduce(reducer, 0);\n\n    return (\n      <div>\n        <div data-testid=\"email-field\">\n          { user }\n        </div>\n        <div data-testid=\"total-field\">\n          { total.toFixed(2) }\n        </div>\n        <div data-testid=\"header-currency-field\">\n          BRL\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  user: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteValue } from '../actions';\n\nclass BtnDelete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.btnDelete = this.btnDelete.bind(this);\n  }\n\n  btnDelete(id) {\n    const { idDispatch } = this.props;\n    idDispatch(id);\n  }\n\n  render() {\n    const { id } = this.props;\n\n    return (\n      <button data-testid=\"delete-btn\" type=\"button\" onClick={ () => this.btnDelete(id) }>\n        <span role=\"img\" aria-label=\"Excluir\">❌</span>\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  idDispatch: (e) => dispatch(deleteValue(e)),\n});\n\nBtnDelete.propTypes = {\n  id: PropTypes.number.isRequired,\n  idDispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BtnDelete);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteValue, editMode, editValue } from '../actions';\n\nclass BtnEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.btnEdit = this.btnEdit.bind(this);\n  }\n\n  btnEdit(id) {\n    const { idDispatch, editModeDispatch, deleteDispatch } = this.props;\n    idDispatch(id);\n    editModeDispatch(true);\n    deleteDispatch(id);\n  }\n\n  render() {\n    const { id } = this.props;\n\n    return (\n      <button data-testid=\"edit-btn\" type=\"button\" onClick={ () => this.btnEdit(id) }>\n        <span role=\"img\" aria-label=\"Excluir\">♻️</span>\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  idDispatch: (e) => dispatch(editValue(e)),\n  deleteDispatch: (e) => dispatch(deleteValue(e)),\n  editModeDispatch: (e) => dispatch(editMode(e)),\n});\n\nBtnEdit.propTypes = {\n  id: PropTypes.number.isRequired,\n  idDispatch: PropTypes.func.isRequired,\n  deleteDispatch: PropTypes.func.isRequired,\n  editModeDispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BtnEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BtnDelete from './BtnDelete';\nimport BtnEdit from './BtnEdit';\n\nclass Table extends React.Component {\n  render() {\n    const { expenses } = this.props;\n\n    return (\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            expenses.map(({\n              id,\n              description,\n              tag,\n              method,\n              value,\n              currency,\n              exchangeRates,\n            }) => {\n              const ask = parseFloat(exchangeRates[currency].ask);\n              const curr = exchangeRates[currency].name.split('/')[0];\n              return (\n                <tr key={ id }>\n                  <td>{ description }</td>\n                  <td>{ tag }</td>\n                  <td>{ method }</td>\n                  <td>{ value }</td>\n                  <td>{ curr }</td>\n                  <td>{ ask.toFixed(2) }</td>\n                  <td>{ (value * ask).toFixed(2) }</td>\n                  <td>Real</td>\n                  <td style={ { display: 'flex', justifyContent: 'space-evenly' } }>\n                    <BtnEdit id={ id } />\n                    <BtnDelete id={ id } />\n                  </td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Form from '../components/Form';\nimport FormEdit from '../components/FormEdit';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  render() {\n    const { editMode } = this.props;\n\n    return (\n      <div>\n        <Header />\n        {\n          (editMode) ? <FormEdit /> : <Form />\n        }\n        <Table />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  editMode: state.wallet.editMode,\n});\n\nWallet.propTypes = {\n  editMode: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\n\nimport { USER } from '../actions';\n\nconst initialState = { email: '' };\n\nfunction userReducer(state = initialState, action) {\n  switch (action.type) {\n  case USER:\n    return { ...state, email: action.value };\n  default:\n    return state;\n  }\n}\n\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { DELETE_LINE, EDIT_LINE, EDIT_MODE, INITIALS, WALLET } from '../actions';\n\nconst initialState = { currencies: [], expenses: [], editData: {}, editMode: false };\n\nfunction walletReducer(state = initialState, action) {\n  switch (action.type) {\n  case WALLET:\n    return { ...state, expenses: [...state.expenses, action.value] };\n  case INITIALS:\n    return { ...state, currencies: action.value };\n  case DELETE_LINE:\n    return {\n      ...state,\n      expenses: state.expenses.filter(({ id }) => id !== action.value),\n    };\n  case EDIT_LINE: {\n    const data = state.expenses.filter(({ id }) => id === action.value);\n    return {\n      ...state,\n      editData: data,\n    };\n  }\n  case EDIT_MODE:\n    return { ...state, editMode: action.value };\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst reducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}